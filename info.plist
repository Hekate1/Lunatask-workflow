<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.cpk2000x.lunatask</string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>05767E26-3F35-4901-B4C3-7F45744968CF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>611A6A74-7909-474A-956B-608741C93637</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>23CF6538-6D0B-448C-9FB5-FAA8C64024F3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B1CF1775-8705-46BA-A992-381F49AE7B5E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>AB92DFE1-89BE-4E32-9A78-35E6DB3ACDF5</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2CB7E1E9-4F78-4C05-B1F4-23C43D70626E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4ED6CF43-A7FB-4F09-B0B0-3DE019FCB055</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2D0FB8F4-7845-4F64-8114-B2A4B9BF7F4E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>404806A3-2466-448B-9088-0749FC1E5342</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>404806A3-2466-448B-9088-0749FC1E5342</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8768FFF4-6CE9-423D-97A1-3F678FF42DCA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>431342CE-2853-4DFE-876E-FBF50747E368</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>05767E26-3F35-4901-B4C3-7F45744968CF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4ED6CF43-A7FB-4F09-B0B0-3DE019FCB055</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>23CF6538-6D0B-448C-9FB5-FAA8C64024F3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>514297DE-7E46-4385-9A82-715793F18B05</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BD305A3E-AC7A-45C2-B989-BA3D52D9A5D7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5B7F7CDD-CFD5-48E7-872F-3F6ADB35CCAA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>98A0654C-221A-4E54-B6BC-8517AF24A7F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>611A6A74-7909-474A-956B-608741C93637</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6D50A6B0-73C5-41F9-8DD2-12718472530F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6A86B9C3-82A3-4137-9E60-C9F60151CF8F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2D0FB8F4-7845-4F64-8114-B2A4B9BF7F4E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>AB92DFE1-89BE-4E32-9A78-35E6DB3ACDF5</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6D50A6B0-73C5-41F9-8DD2-12718472530F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6C54578F-F8E3-4AED-9304-B29E4A52311D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>DB7E7D3E-83A0-4681-A079-8951F11CA84B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>CE628C5E-4B5C-47F1-B165-0166360AF4AF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7316E671-2342-428A-9007-EF1050F12740</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B260084D-9705-485D-8B43-9C2399E9E477</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>74B0A912-9116-4E7B-90D2-790CA943771E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E9F4ED25-2238-455A-824C-5A48A51709B2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>74B1625B-9A67-4A3F-AC41-A7578471E125</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>98A0654C-221A-4E54-B6BC-8517AF24A7F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>B70BB9D8-5C3D-4510-9881-631AFBC886D3</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>4ED6CF43-A7FB-4F09-B0B0-3DE019FCB055</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8768FFF4-6CE9-423D-97A1-3F678FF42DCA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BD305A3E-AC7A-45C2-B989-BA3D52D9A5D7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>0FCF15C9-346F-47AA-B15F-3E65D7FA4FD2</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>514297DE-7E46-4385-9A82-715793F18B05</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>98A0654C-221A-4E54-B6BC-8517AF24A7F0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C27968F7-FFD4-42BB-AACA-6B5F4A1BCD8A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9E4FDEB2-A7A5-4930-853F-0C70282BC5DF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>74B1625B-9A67-4A3F-AC41-A7578471E125</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A8DE1EDF-50DB-44CB-81C7-41726D894451</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>91CB67FD-282F-4104-AEE6-6231756BB4CC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>DB7E7D3E-83A0-4681-A079-8951F11CA84B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>EF6FD25F-1CEB-4202-9946-69958EFC4B97</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B1CF1775-8705-46BA-A992-381F49AE7B5E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>431342CE-2853-4DFE-876E-FBF50747E368</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B260084D-9705-485D-8B43-9C2399E9E477</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>74B0A912-9116-4E7B-90D2-790CA943771E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>B70BB9D8-5C3D-4510-9881-631AFBC886D3</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>BE5396E1-7289-4C34-9A42-5DB7E9296EB2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BD305A3E-AC7A-45C2-B989-BA3D52D9A5D7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E935DDD4-F8C8-436A-B4DF-4F3826B57DAF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BE5396E1-7289-4C34-9A42-5DB7E9296EB2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6A86B9C3-82A3-4137-9E60-C9F60151CF8F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C27968F7-FFD4-42BB-AACA-6B5F4A1BCD8A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>05767E26-3F35-4901-B4C3-7F45744968CF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C67EC923-9E44-44FF-BEC0-AFCD2366AFE4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F1BF62D6-28CD-477D-B96D-A8EE9D988D61</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CD9B4A1D-A07F-4144-B039-CF82AECBD3EF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7316E671-2342-428A-9007-EF1050F12740</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E5B28AF7-A055-458D-85AC-92FA3BB7737F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7316E671-2342-428A-9007-EF1050F12740</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E935DDD4-F8C8-436A-B4DF-4F3826B57DAF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C67EC923-9E44-44FF-BEC0-AFCD2366AFE4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E9F4ED25-2238-455A-824C-5A48A51709B2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8768FFF4-6CE9-423D-97A1-3F678FF42DCA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F1BF62D6-28CD-477D-B96D-A8EE9D988D61</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A8DE1EDF-50DB-44CB-81C7-41726D894451</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F555A9EE-4D3C-41F6-A644-8B2523E54C59</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9E4FDEB2-A7A5-4930-853F-0C70282BC5DF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Connor Kennedy</string>
	<key>description</key>
	<string>Lunatask automation using API</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Lunatask</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>hotstring</key>
				<string></string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>5B7F7CDD-CFD5-48E7-872F-3F6ADB35CCAA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Please enter task name</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>98A0654C-221A-4E54-B6BC-8517AF24A7F0</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>Task Created Successfully</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>6C54578F-F8E3-4AED-9304-B29E4A52311D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>areaIdx</key>
					<string>1</string>
					<key>taskName</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>C27968F7-FFD4-42BB-AACA-6B5F4A1BCD8A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>import sys
import os
import json
import uuid

def dataHelper(data, localKey, remoteKey):
    if localKey in os.environ and os.environ[localKey] != "":
        data[remoteKey] = os.environ[localKey]

token = os.environ["token"]
taskName = os.environ["taskName"]
area = os.environ[f"area{os.environ['areaIdx']}"]
url = "https://api.lunatask.app/v1/tasks"

headers = ["Authorization: Bearer " + str(token), "Content-type: application/json"]
data = {"area_id":area.split(":")[1], "name":taskName}

if "goalIdx" in os.environ and os.environ["goalIdx"] != "":
    data["goal_id"] = os.environ[f"goal{os.environ['goalIdx']}"].split(":")[2]
dataHelper(data, "taskStatus", "status")
dataHelper(data, "taskEstimate", "estimate")
dataHelper(data, "taskPriority", "priority")
dataHelper(data, "taskNote", "note")
dataHelper(data, "source", "source")
data["source_id"] = str(uuid.uuid4())

command = "curl -X POST "
for h in headers:
    command += "-H \'" + h + "\' "
command += "-d \'" + json.dumps(data) + "\' " + url

sys.stdout.write(command)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>05767E26-3F35-4901-B4C3-7F45744968CF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>on run argv
  do shell script argv
end run</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>611A6A74-7909-474A-956B-608741C93637</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>lluna</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Create task</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>F555A9EE-4D3C-41F6-A644-8B2523E54C59</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>.+</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>DB7E7D3E-83A0-4681-A079-8951F11CA84B</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>6D50A6B0-73C5-41F9-8DD2-12718472530F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:atc}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>0</integer>
						<key>matchstring</key>
						<string>0</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>B70BB9D8-5C3D-4510-9881-631AFBC886D3</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>74B1625B-9A67-4A3F-AC41-A7578471E125</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>9E4FDEB2-A7A5-4930-853F-0C70282BC5DF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>Task Creation Failed</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>CE628C5E-4B5C-47F1-B165-0166360AF4AF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>import SwiftUI
import Foundation

struct TaskForm: View {
    let areas: Array&lt;String&gt;
    let goals: Array&lt;String&gt;
    @State var taskName: String = ""
    @State var areaIdx: String = "1"
    @State var goalIdx: String = "0"
    @State var taskStatus: String = "later"
    @State var taskPriority: String = "0"
    @State var taskEstimate: String = ""
    @State var taskNote: String = ""
    @State var bottomText: String = "Items with a * are required"
    
    var body: some View {
        VStack {
            Text("Create task in Lunatask").font(.title2)
            Row(text: "Task Name *", input: $taskName)
            AreaAndGoalSelector(areaIdx: $areaIdx, goalIdx: $goalIdx, areas: areas, goals: goals)
            Selector(title: "Status", selection: $taskStatus, options: ["Later (default):later", "Next:next", "In progress:started", "Waiting:waiting", "Completed:completed"])
            Selector(title: "Priority", selection: $taskPriority, options: ["Highest priority:2", "High priority:1", "Normal priority (default):0", "Low priority:-1", "Lowest priority:-2"])
            Row(text: "Estimate in minutes", input: $taskEstimate)
            HStack {
                VStack {
                    Text("Task Note\n")
                    Text("Enter your text")
                    Text("in markdown")
                }
                
                TextEditor(text: $taskNote).frame(maxWidth: 300, minHeight: 100).font(.custom("HelveticaNeue", size: 13))
            }.frame(maxWidth: .infinity, alignment: .trailing)
            
            Buttons()
            Text(bottomText)
        }
        .padding()
        .frame(width: 460)
    }
    
    @ViewBuilder
    func Buttons() -&gt; some View {
        HStack {
            Button(role: .cancel) {
                print("canceled", terminator: "")
                NSApplication.shared.terminate(nil)
            } label: {
                Text("Cancel")
            }
            // ===---------------------------------------------------------------=== //
            // MARK: - Define here what should be returned
            // ===---------------------------------------------------------------=== //
            Button {
                // print("\(title)\t\(text)\t\(max)\t\(min)\t\(long)\t\(areaOfLife)\t\(toggle.description)")
                // ["taskName", "areaIdx", "goalIdx", "taskStatus", "taskEstimate", "taskPriority"]
                if (goalIdx == "0") {
                    goalIdx = ""
                }
                if (taskName.contains("swiftseperator") || taskNote.contains("swiftseperator")) {
                    bottomText = "The string 'swiftseperator' cannot be in the task name or note"
                }
                else if (taskName == "") {
                    bottomText = "'Task Name' cannot be empty"
                }
                else if (taskEstimate != "" &amp;&amp; Int(taskEstimate) == nil) {
                    bottomText = "The estimate field must be an integer"
                }
                else {
                    let otherVars: Array&lt;String&gt; = [areaIdx, goalIdx, taskStatus, taskPriority, taskEstimate, taskNote]
                    var outputText: String = taskName
                    for taskVar: String in otherVars {
                        outputText += "swiftseperator" + taskVar
                    }
                    print(outputText, terminator: "")
                    NSApplication.shared.terminate(nil)
                }
            } label: {
                Text("Proceed")
            }
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
        .padding(.top, 10)
    }
}

struct Row: View {
    let text: String
    @Binding var input: String
    
    var body: some View {
        HStack {
            Text(text)
            TextField("", text: $input)
                .frame(maxWidth: 300)
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
}

struct AreaAndGoalSelector: View {
    @Binding var areaIdx: String
    @Binding var goalIdx: String
    let areas: Array&lt;String&gt;
    let goals: Array&lt;String&gt;
    func GoalsInArea() -&gt; Array&lt;String&gt; {
        var matchingGoals: Array&lt;String&gt; = ["None:0"]
        let areaName: String = String(areas[Int(areaIdx)! - 1].split(separator: ":")[0])
        for goal: String in goals {
            if (String(goal.split(separator: ":")[0]) == areaName) {
                matchingGoals.append(String(goal.split(separator: ":")[1] + ":" + goal.split(separator: ":")[2]))
            }
        }
        goalIdx = "0"
        return matchingGoals
    }
    @State var goalOptions: Array&lt;String&gt; = []
    var areaOfLifePicker: some View {
        HStack {
            Text("Areas of Life *")
            Picker("", selection: $areaIdx, content: {
                ForEach(areas, id: \.self) {op in Text(String(op.split(separator: ":")[0])).tag(String(op.split(separator: ":")[1]))}
            })
            .frame(width: 300)
            .onChange(of: areaIdx, initial: true, {goalOptions = GoalsInArea()})
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
    var goalPicker: some View {
        HStack {
            Text("Attached Goal")
            Picker("", selection: $goalIdx, content: {
                ForEach(goalOptions, id: \.self) {op in Text(String(op.split(separator: ":")[0])).tag(String(op.split(separator: ":")[1]))}
            })
            .frame(width: 300)
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
    var body: some View {
        VStack {
            areaOfLifePicker
            goalPicker
        }
    }
}

struct Selector: View {
    let title: String
    @Binding var selection: String
    let options: Array&lt;String&gt;
    var body: some View {
        HStack {
            Text(title)
            Picker("", selection: $selection, content: {
                ForEach(options, id: \.self) {op in Text(String(op.split(separator: ":")[0])).tag(String(op.split(separator: ":")[1]))}
            })
            .frame(width: 300)
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
}

final class TaskFormAppDelegate: NSObject, NSApplicationDelegate {
    var areas: Array&lt;String&gt;
    var goals: Array&lt;String&gt;
    var window: NSWindow!
    init(areas: Array&lt;String&gt;, goals: Array&lt;String&gt;) {
        self.areas = areas
        self.goals = goals
    }

    final func applicationDidFinishLaunching(_ aNotification: Notification) {
        let taskFormView = TaskForm(areas: areas, goals: goals)
        window = NSWindow(
            contentRect: NSRect(x: 0, y: 0, width: 460, height: 350),
            styleMask: [.titled, .miniaturizable, .resizable, .fullSizeContentView],
            backing: .buffered,
            defer: false
        )
        window.center()
        window.collectionBehavior = .canJoinAllSpaces
        window.level = NSWindow.Level.floating
        window.contentView = NSHostingView(rootView: taskFormView)
        window.makeKeyAndOrderFront(nil)
        NSApplication.shared.activate(ignoringOtherApps: true)
    }
}

let env: [String : String] = ProcessInfo.processInfo.environment
var idx: Int = 1
var areas: Array&lt;String&gt; = []
while (env["area" + String(idx)] != nil &amp;&amp; env["area" + String(idx)] != "") {
    areas.append(String((env["area" + String(idx)]!).split(separator: ":")[0]) + ":" + String(idx))
    idx += 1
}

idx = 1
var goals: Array&lt;String&gt; = []
while (env["goal" + String(idx)] != nil &amp;&amp; env["goal" + String(idx)] != "") {
    let goal = (env["goal" + String(idx)]!).split(separator: ":")
    goals.append(String(goal[0]) + ":" + String(goal[1]) + ":" + String(idx))
    idx += 1
}

let app = NSApplication.shared
let delegate = TaskFormAppDelegate(areas: areas, goals: goals)
app.delegate = delegate
app.setActivationPolicy(.accessory)
app.run()</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>10</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4ED6CF43-A7FB-4F09-B0B0-3DE019FCB055</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>delimiter</key>
				<string>swiftseperator</string>
				<key>discardemptyarguments</key>
				<false/>
				<key>outputas</key>
				<integer>0</integer>
				<key>trimarguments</key>
				<false/>
				<key>variableprefix</key>
				<string>split</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.split</string>
			<key>uid</key>
			<string>B1CF1775-8705-46BA-A992-381F49AE7B5E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{query}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>1</integer>
						<key>matchstring</key>
						<string>canceled</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>AB92DFE1-89BE-4E32-9A78-35E6DB3ACDF5</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>23CF6538-6D0B-448C-9FB5-FAA8C64024F3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>areaIdx</key>
					<string>{var:split2}</string>
					<key>goalIdx</key>
					<string>{var:split3}</string>
					<key>taskEstimate</key>
					<string>{var:split6}</string>
					<key>taskName</key>
					<string>{var:split1}</string>
					<key>taskNote</key>
					<string>{var:split7}</string>
					<key>taskPriority</key>
					<string>{var:split5}</string>
					<key>taskStatus</key>
					<string>{var:split4}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>431342CE-2853-4DFE-876E-FBF50747E368</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>hotstring</key>
				<string></string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>2CB7E1E9-4F78-4C05-B1F4-23C43D70626E</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>behaviour</key>
				<integer>1</integer>
				<key>fontmode</key>
				<integer>0</integer>
				<key>fontsizing</key>
				<integer>0</integer>
				<key>footertext</key>
				<string>Enter note as markdown, press enter when done, press shift-enter for new lines</string>
				<key>inputfile</key>
				<string></string>
				<key>inputtype</key>
				<integer>0</integer>
				<key>loadingtext</key>
				<string></string>
				<key>outputmode</key>
				<integer>0</integer>
				<key>scriptinput</key>
				<integer>0</integer>
				<key>spellchecking</key>
				<integer>1</integer>
				<key>stackview</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.userinterface.text</string>
			<key>uid</key>
			<string>BD305A3E-AC7A-45C2-B989-BA3D52D9A5D7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Please enter note name</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>74B0A912-9116-4E7B-90D2-790CA943771E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>lluna</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Create note</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>CD9B4A1D-A07F-4144-B039-CF82AECBD3EF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>noteName</key>
					<string>{query}</string>
					<key>notebookIdx</key>
					<string>1</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>E9F4ED25-2238-455A-824C-5A48A51709B2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:disableNoteText}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>0</integer>
						<key>matchstring</key>
						<string>1</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>0FCF15C9-346F-47AA-B15F-3E65D7FA4FD2</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>8768FFF4-6CE9-423D-97A1-3F678FF42DCA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>Replace this text with the note, Lunatask will parse as markdown, press enter when done, press shift-enter for new lines</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>514297DE-7E46-4385-9A82-715793F18B05</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:anc}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>0</integer>
						<key>matchstring</key>
						<string>0</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>B70BB9D8-5C3D-4510-9881-631AFBC886D3</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>B260084D-9705-485D-8B43-9C2399E9E477</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>7316E671-2342-428A-9007-EF1050F12740</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>delimiter</key>
				<string>swiftseperator</string>
				<key>discardemptyarguments</key>
				<false/>
				<key>outputas</key>
				<integer>0</integer>
				<key>trimarguments</key>
				<false/>
				<key>variableprefix</key>
				<string>split</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.split</string>
			<key>uid</key>
			<string>2D0FB8F4-7845-4F64-8114-B2A4B9BF7F4E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>import SwiftUI
import Foundation

struct TaskForm: View {
    let notebooks: Array&lt;String&gt;
    @State var noteName: String = ""
    @State var notebookIdx: String = "1"
    @State var bottomText: String = "Items with a * are required"
    
    var body: some View {
        VStack {
            Text("Create note in Lunatask").font(.title2)
            Row(text: "Note Name *", input: $noteName)
            Selector(title: "Notebook *", selection: $notebookIdx, options: notebooks)
            Buttons()
            Text(bottomText)
        }
        .padding()
        .frame(width: 460)
    }
    
    @ViewBuilder
    func Buttons() -&gt; some View {
        HStack {
            Button(role: .cancel) {
                print("canceled", terminator: "")
                NSApplication.shared.terminate(nil)
            } label: {
                Text("Cancel")
            }
            // ===---------------------------------------------------------------=== //
            // MARK: - Define here what should be returned
            // ===---------------------------------------------------------------=== //
            Button {
                if (noteName.contains("swiftseperator")) {
                    bottomText = "The string 'swiftseperator' cannot be in the note name"
                }
                else if (noteName == "") {
                    bottomText = "'Note Name' cannot be empty"
                }
                else {
                    let otherVars: Array&lt;String&gt; = [notebookIdx]
                    var outputText: String = noteName
                    for taskVar: String in otherVars {
                        outputText += "swiftseperator" + taskVar
                    }
                    print(outputText, terminator: "")
                    NSApplication.shared.terminate(nil)
                }
            } label: {
                Text("Proceed")
            }
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
        .padding(.top, 10)
    }
}

struct Row: View {
    let text: String
    @Binding var input: String
    
    var body: some View {
        HStack {
            Text(text)
            TextField("", text: $input)
                .frame(maxWidth: 300)
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
}

struct Selector: View {
    let title: String
    @Binding var selection: String
    let options: Array&lt;String&gt;
    var body: some View {
        HStack {
            Text(title)
            Picker("", selection: $selection, content: {
                ForEach(options, id: \.self) {op in Text(String(op.split(separator: ":")[0])).tag(String(op.split(separator: ":")[1]))}
            })
            .frame(width: 300)
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
    }
}

final class TaskFormAppDelegate: NSObject, NSApplicationDelegate {
    var notebooks: Array&lt;String&gt;
    var window: NSWindow!
    init(notebooks: Array&lt;String&gt;) {
        self.notebooks = notebooks
    }

    final func applicationDidFinishLaunching(_ aNotification: Notification) {
        let taskFormView = TaskForm(notebooks: notebooks)
        window = NSWindow(
            contentRect: NSRect(x: 0, y: 0, width: 460, height: 350),
            styleMask: [.titled, .miniaturizable, .resizable, .fullSizeContentView],
            backing: .buffered,
            defer: false
        )
        window.center()
        window.collectionBehavior = .canJoinAllSpaces
        window.level = NSWindow.Level.floating
        window.contentView = NSHostingView(rootView: taskFormView)
        window.makeKeyAndOrderFront(nil)
        NSApplication.shared.activate(ignoringOtherApps: true)
    }
}

let env: [String : String] = ProcessInfo.processInfo.environment
var idx: Int = 1
var notebooks: Array&lt;String&gt; = []
while (env["notebook" + String(idx)] != nil &amp;&amp; env["notebook" + String(idx)] != "") {
    notebooks.append(String((env["notebook" + String(idx)]!).split(separator: ":")[0]) + ":" + String(idx))
    idx += 1
}

let app = NSApplication.shared
let delegate = TaskFormAppDelegate(notebooks: notebooks)
app.delegate = delegate
app.setActivationPolicy(.accessory)
app.run()</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>10</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>BE5396E1-7289-4C34-9A42-5DB7E9296EB2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>noteName</key>
					<string>{var:split1}</string>
					<key>notebookIdx</key>
					<string>{var:split2}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>404806A3-2466-448B-9088-0749FC1E5342</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{query}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>1</integer>
						<key>matchstring</key>
						<string>canceled</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>AB92DFE1-89BE-4E32-9A78-35E6DB3ACDF5</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>6A86B9C3-82A3-4137-9E60-C9F60151CF8F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>hotstring</key>
				<string></string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>E5B28AF7-A055-458D-85AC-92FA3BB7737F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>Note Created Successfully</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>91CB67FD-282F-4104-AEE6-6231756BB4CC</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>import sys
import os
import json
import uuid

def dataHelper(data, localKey, remoteKey):
    if localKey in os.environ and os.environ[localKey] != "":
        data[remoteKey] = os.environ[localKey]

token = os.environ["token"]
noteName = os.environ["noteName"]
notebookId = os.environ[f"notebook{os.environ['notebookIdx']}"].split(":")[1]
noteText = os.environ["noteText"]
url = "https://api.lunatask.app/v1/notes"

headers = ["Authorization: Bearer " + str(token), "Content-type: application/json"]
data = {"notebook_id":notebookId, "name":noteName, "content":noteText}

dataHelper(data, "source", "source")
data["source_id"] = str(uuid.uuid4())

command = "curl -X POST "
for h in headers:
    command += "-H \'" + h + "\' "
command += "-d \'" + json.dumps(data) + "\' " + url

sys.stdout.write(command)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C67EC923-9E44-44FF-BEC0-AFCD2366AFE4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>on run argv
  do shell script argv
end run</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F1BF62D6-28CD-477D-B96D-A8EE9D988D61</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>.+</string>
						<key>outputlabel</key>
						<string></string>
						<key>uid</key>
						<string>DB7E7D3E-83A0-4681-A079-8951F11CA84B</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>A8DE1EDF-50DB-44CB-81C7-41726D894451</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>noteText</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>E935DDD4-F8C8-436A-B4DF-4F3826B57DAF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>Note Creation Failed</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>EF6FD25F-1CEB-4202-9946-69958EFC4B97</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Workflow must be configured before usage

This information should (hopefully) not be required to set up and use the workflow but explains all options in depth in any confusion arises

##Introduction
Welcome to the unofficial Alfred workflow for Lunatask!

Due to the current functionality of the Lunatask API, please note the following:
- An internet connection is required to use the extension
	- Related, the Lunatask app is not required to be installed on this computer though various configuration information must be manually copied from the app so an install somewhere is required
- New tasks and notes can be created but existing ones cannot be edited
	- It is possible that in a future update of this workflow that the ability for editing of tasks/notes **created by this workflow** may be added
	- With manual data export from Lunatask, it is theoretically possible to edit tasks/notes that exist at the time of export though it is unlikely this functionality will be added unless programatic export becomes supported

Support for Lunatask's new "Relationships" may come in a future update

##First-time configuration
Before using the workflow, certain info must be manually copied over from the Lunatask App

It is also **strongly recommended** to review the hotkey bindings and make sure they do not conflict with any other custom key bindings
- By default, normal task creation is bound to command-L, all option task creation is bound to shift-command-L, and note creation is bound to option-L
- To change the bindings, double click on the binding object in the workflow and follow the instructions

The default input in alfed to pull up the workflow is ll but this can be changed by modifying the relevant keyword object

###Required
Access Token:
- An access token is required to use the API at all
- Paste in access token from Lunatask &gt; Settings &gt; Access Tokens, creating a new token if needed

Primary Area of Life:
- Tasks are created in this area when not using "Advanced Task Creation" (ATC) and it is the default area when ATC is enabled
- Box should be filled out in the format "name:ID" (no quotes) where name is area name and ID is the associated ID
	- E.g. "Personal tasks:8d7b88c6-b8e0-49fa-a193-63f7bacf75ba"
- Name does not have to match the name in Lunatask but it is recommended, **name cannot contain ":"**
	- The program will not recognize that a name containing a colon is entered but task creation will fail
- Area ID can be found by following Lunatask &gt; Tasks &gt; Right click area of life &gt; Area Settings &gt; Copy Area ID
- It is loosely reccomended the area be an Alfred (and other API) only area where tasks are put to later be sorted into their correct area if not enabling Advanced Task Creation described below

Primary Notebook:
- Tasks are created in this area when not using "All Notebooks" and it is the default area when "All Notebooks" is enabled
- Box should be filled out in the format "name:ID" (no quotes) where name is notebook name and ID is the associated ID
- Name does not have to match the name in Lunatask but it is recommended, **name cannot contain ":"**
	- The program will not recognize that a name containing a colon is entered but task creation will fail
- Notebook ID can be found by following Lunatask &gt; Notebooks &gt; Select notebook &gt; Click gear in top right of left window &gt; Copy Area ID
- This value is required to create notes

Advanced Task Creation:
- Enables all task options by default when creating task from Alfred &gt; \*Workflow Keyword\* &gt; Create task
- Both name only task creation and full option task creation can be done using hotkeys

Additional Areas of Life:
- Allows task creation in other specified areas when using ATC
- Must be filled out in order
- Same "name:ID" format instructions as primary area
- If more areas are needed, open the workflow in Alfred, click the [x] icon in the top right, click Configuration Builder, scroll down to "area3", right click/two finger click, Copy Item, click + in bottom right, click Paste as New Item, change Variable field to be "area" + the next available number
	- A new area will be available at the bottom of the list when returning to "Configure Workflow"

Attachable Goals:
- Allows to attach the task to a goal when using ATC
- These are specific to each area of life, will only appear for the currently selected area
- Must be formatted as "area name:name:ID" where area name exactly matches the area name listed above that contains the goal
- Goal ID can be found by following Lunatask &gt; Tasks &gt; Right click goal &gt; Goal Settings &gt; Copy Goal ID
- More goals can be added by following the same procedure as more areas of life except with variable "goal" + number

All Notebooks:
- Enables selection between multiple notebooks on note creation rather than creation in just the default notebook

Additional Notebooks
- Allows creation of notes in different notebooks when all notebooks is enabled
- Same "name:ID" format as areas of life
- Must be filled out in order

Disable Default Note Text
- By default, created notes are prepopulated with instructions which have to be deleted
- Once comfortable with the tool, this option allows for notes to start blank

##Other
Lunatask task/note source
- When tasks or notes are created using the API, a source and source ID can optionally be passed in for later API usage
- This workflow passes in the source name "alfred" and creates a random UUID as the source ID
- These values are not currently used, exist only for completeness, may become useful in future updates
- To modify the source name, open the workflow in Alfred, click the [x] icon in the top right, click Environment Variables, and change the value of "source"</string>
	<key>uidata</key>
	<dict>
		<key>05767E26-3F35-4901-B4C3-7F45744968CF</key>
		<dict>
			<key>note</key>
			<string>Generates task creation curl command from inputs</string>
			<key>xpos</key>
			<real>675</real>
			<key>ypos</key>
			<real>150</real>
		</dict>
		<key>23CF6538-6D0B-448C-9FB5-FAA8C64024F3</key>
		<dict>
			<key>xpos</key>
			<real>525</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>2CB7E1E9-4F78-4C05-B1F4-23C43D70626E</key>
		<dict>
			<key>note</key>
			<string>All option "advanced" task creation hotkey</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>310</real>
		</dict>
		<key>2D0FB8F4-7845-4F64-8114-B2A4B9BF7F4E</key>
		<dict>
			<key>xpos</key>
			<real>570</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>404806A3-2466-448B-9088-0749FC1E5342</key>
		<dict>
			<key>xpos</key>
			<real>615</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>431342CE-2853-4DFE-876E-FBF50747E368</key>
		<dict>
			<key>xpos</key>
			<real>615</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>4ED6CF43-A7FB-4F09-B0B0-3DE019FCB055</key>
		<dict>
			<key>note</key>
			<string>Launches task creation UI, identical to taskForm.swift</string>
			<key>xpos</key>
			<real>390</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>514297DE-7E46-4385-9A82-715793F18B05</key>
		<dict>
			<key>xpos</key>
			<real>745</real>
			<key>ypos</key>
			<real>555</real>
		</dict>
		<key>5B7F7CDD-CFD5-48E7-872F-3F6ADB35CCAA</key>
		<dict>
			<key>note</key>
			<string>Name-only task creation hotkey</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>611A6A74-7909-474A-956B-608741C93637</key>
		<dict>
			<key>note</key>
			<string>Runs curl with input from previous object</string>
			<key>xpos</key>
			<real>805</real>
			<key>ypos</key>
			<real>150</real>
		</dict>
		<key>6A86B9C3-82A3-4137-9E60-C9F60151CF8F</key>
		<dict>
			<key>xpos</key>
			<real>525</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>6C54578F-F8E3-4AED-9304-B29E4A52311D</key>
		<dict>
			<key>xpos</key>
			<real>980</real>
			<key>ypos</key>
			<real>90</real>
		</dict>
		<key>6D50A6B0-73C5-41F9-8DD2-12718472530F</key>
		<dict>
			<key>xpos</key>
			<real>930</real>
			<key>ypos</key>
			<real>170</real>
		</dict>
		<key>7316E671-2342-428A-9007-EF1050F12740</key>
		<dict>
			<key>xpos</key>
			<real>280</real>
			<key>ypos</key>
			<real>605</real>
		</dict>
		<key>74B0A912-9116-4E7B-90D2-790CA943771E</key>
		<dict>
			<key>note</key>
			<string>Note name input</string>
			<key>xpos</key>
			<real>390</real>
			<key>ypos</key>
			<real>500</real>
		</dict>
		<key>74B1625B-9A67-4A3F-AC41-A7578471E125</key>
		<dict>
			<key>xpos</key>
			<real>325</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>8768FFF4-6CE9-423D-97A1-3F678FF42DCA</key>
		<dict>
			<key>xpos</key>
			<real>695</real>
			<key>ypos</key>
			<real>535</real>
		</dict>
		<key>91CB67FD-282F-4104-AEE6-6231756BB4CC</key>
		<dict>
			<key>xpos</key>
			<real>980</real>
			<key>ypos</key>
			<real>700</real>
		</dict>
		<key>98A0654C-221A-4E54-B6BC-8517AF24A7F0</key>
		<dict>
			<key>note</key>
			<string>Task name input</string>
			<key>xpos</key>
			<real>390</real>
			<key>ypos</key>
			<real>90</real>
		</dict>
		<key>9E4FDEB2-A7A5-4930-853F-0C70282BC5DF</key>
		<dict>
			<key>xpos</key>
			<real>280</real>
			<key>ypos</key>
			<real>195</real>
		</dict>
		<key>A8DE1EDF-50DB-44CB-81C7-41726D894451</key>
		<dict>
			<key>xpos</key>
			<real>930</real>
			<key>ypos</key>
			<real>780</real>
		</dict>
		<key>B1CF1775-8705-46BA-A992-381F49AE7B5E</key>
		<dict>
			<key>xpos</key>
			<real>570</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>B260084D-9705-485D-8B43-9C2399E9E477</key>
		<dict>
			<key>xpos</key>
			<real>325</real>
			<key>ypos</key>
			<real>595</real>
		</dict>
		<key>BD305A3E-AC7A-45C2-B989-BA3D52D9A5D7</key>
		<dict>
			<key>note</key>
			<string>Displays large text box that prompts user to enter note text</string>
			<key>xpos</key>
			<real>795</real>
			<key>ypos</key>
			<real>500</real>
		</dict>
		<key>BE5396E1-7289-4C34-9A42-5DB7E9296EB2</key>
		<dict>
			<key>note</key>
			<string>Launches note creation UI, identical to noteForm.swift</string>
			<key>xpos</key>
			<real>390</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>C27968F7-FFD4-42BB-AACA-6B5F4A1BCD8A</key>
		<dict>
			<key>xpos</key>
			<real>570</real>
			<key>ypos</key>
			<real>120</real>
		</dict>
		<key>C67EC923-9E44-44FF-BEC0-AFCD2366AFE4</key>
		<dict>
			<key>note</key>
			<string>Generates note creation curl command from inputs</string>
			<key>xpos</key>
			<real>675</real>
			<key>ypos</key>
			<real>760</real>
		</dict>
		<key>CD9B4A1D-A07F-4144-B039-CF82AECBD3EF</key>
		<dict>
			<key>note</key>
			<string>Keyword to show workflow when in alfred</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>500</real>
		</dict>
		<key>CE628C5E-4B5C-47F1-B165-0166360AF4AF</key>
		<dict>
			<key>xpos</key>
			<real>980</real>
			<key>ypos</key>
			<real>205</real>
		</dict>
		<key>E5B28AF7-A055-458D-85AC-92FA3BB7737F</key>
		<dict>
			<key>note</key>
			<string>Note creation hotkey, uses value of "All Notebooks" to determine whether to show full UI</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>645</real>
		</dict>
		<key>E935DDD4-F8C8-436A-B4DF-4F3826B57DAF</key>
		<dict>
			<key>xpos</key>
			<real>630</real>
			<key>ypos</key>
			<real>790</real>
		</dict>
		<key>E9F4ED25-2238-455A-824C-5A48A51709B2</key>
		<dict>
			<key>xpos</key>
			<real>570</real>
			<key>ypos</key>
			<real>530</real>
		</dict>
		<key>EF6FD25F-1CEB-4202-9946-69958EFC4B97</key>
		<dict>
			<key>xpos</key>
			<real>980</real>
			<key>ypos</key>
			<real>815</real>
		</dict>
		<key>F1BF62D6-28CD-477D-B96D-A8EE9D988D61</key>
		<dict>
			<key>note</key>
			<string>Runs curl with input from previous object</string>
			<key>xpos</key>
			<real>805</real>
			<key>ypos</key>
			<real>760</real>
		</dict>
		<key>F555A9EE-4D3C-41F6-A644-8B2523E54C59</key>
		<dict>
			<key>note</key>
			<string>Keyword to show workflow when in alfred</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>165</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Paste in access token from Lunatask &gt; Settings &gt; Access Tokens</string>
			<key>label</key>
			<string>Access Token</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>token</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Primary location of created tasks, paste in ID value from Lunatask &gt; Tasks &gt; Right click area of life &gt; Area Settings &gt; Copy Area ID, please enter in the form of "name:ID"</string>
			<key>label</key>
			<string>Primary Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Primary location of created tasks, paste in ID value from Lunatask &gt; Notebooks &gt; Select notebook &gt; Click gear in top right of left window &gt; Copy Area ID, please enter in the form of "name:ID", required to create notes</string>
			<key>label</key>
			<string>Primary Notebook</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>notebook1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<false/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Enable all task creation options</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Advanced Task Creation</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>atc</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Optional additional area when advanced task creation is used, please enter in the form of "name:ID"</string>
			<key>label</key>
			<string>Additional Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area2</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Additional Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area3</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Additional Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area4</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Additional Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area5</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Additional Area of Life</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>area6</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>area name:name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>A goal that can optionally be attached to tasks, paste in ID value from Lunatask &gt; Tasks &gt; Right click goal &gt; Goal Settings &gt; Copy Goal ID, please enter in the form of "area name:name:ID" where area name exactly matches the area name listed above that contains the goal</string>
			<key>label</key>
			<string>Attachable Goal</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>goal1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>area name:name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Attachable Goal</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>goal2</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>area name:name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Attachable Goal</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>goal3</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>area name:name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Attachable Goal</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>goal4</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<false/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Enable selection between all notebooks</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>All Notebooks</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>anc</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Optional additional area when all notebooks are enabled, please enter in the form of "name:ID"</string>
			<key>label</key>
			<string>Additional Notebook</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>notebook2</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Additional Notebook</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>notebook3</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string>name:ID</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Optional additional area when all notebooks are enabled, please enter in the form of "name:ID"</string>
			<key>label</key>
			<string>Additional Notebook</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>notebook4</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<false/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Disables the automatic note instructions</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Disable Default Note Text</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>disableNoteText</string>
		</dict>
	</array>
	<key>variables</key>
	<dict>
		<key>source</key>
		<string>alfred</string>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>0.3.2</string>
	<key>webaddress</key>
	<string>https://github.com/Hekate1/Lunatask-workflow</string>
</dict>
</plist>
